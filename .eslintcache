[{"/Users/aj/Projects/personal/portfolio/src/App.js":"1","/Users/aj/Projects/personal/portfolio/src/reportWebVitals.js":"2","/Users/aj/Projects/personal/portfolio/src/index.js":"3","/Users/aj/Projects/personal/portfolio/src/Containers/Home/Home.js":"4","/Users/aj/Projects/personal/portfolio/src/Containers/About/About.js":"5","/Users/aj/Projects/personal/portfolio/src/Containers/Skills/Skills.js":"6","/Users/aj/Projects/personal/portfolio/src/Containers/Experience/Experience.js":"7","/Users/aj/Projects/personal/portfolio/src/Containers/Resume/Resume.js":"8","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Showcase.js":"9","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban1/Kanban1.js":"10","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban1/PipeView.js":"11","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban1/DealsList.js":"12","/Users/aj/Projects/personal/portfolio/src/libs/validators.js":"13","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban1/Explanation.js":"14","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban2/Kanban2.js":"15","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban2/PipeView.js":"16","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban2/Explanation.js":"17","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/OverviewStats.js":"18","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/InboxComps/OtherActs.js":"19","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/Inbox.js":"20","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/AllActivities.js":"21","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Tasks.js":"22","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/InboxComps/InboxHeader.js":"23","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/Explanation.js":"24","/Users/aj/Projects/personal/portfolio/src/Containers/Contact/Contact.js":"25"},{"size":5427,"mtime":1611499109268,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1610542186091,"results":"28","hashOfConfig":"27"},{"size":449,"mtime":1610708075183,"results":"29","hashOfConfig":"27"},{"size":1497,"mtime":1610634806915,"results":"30","hashOfConfig":"27"},{"size":5150,"mtime":1610793531765,"results":"31","hashOfConfig":"27"},{"size":7397,"mtime":1611498366469,"results":"32","hashOfConfig":"27"},{"size":12675,"mtime":1610805444666,"results":"33","hashOfConfig":"27"},{"size":24006,"mtime":1611224634960,"results":"34","hashOfConfig":"27"},{"size":30097,"mtime":1611500249986,"results":"35","hashOfConfig":"27"},{"size":9963,"mtime":1611224652529,"results":"36","hashOfConfig":"27"},{"size":3717,"mtime":1610982697397,"results":"37","hashOfConfig":"27"},{"size":28608,"mtime":1611068222674,"results":"38","hashOfConfig":"27"},{"size":3558,"mtime":1610970869232,"results":"39","hashOfConfig":"27"},{"size":3290,"mtime":1611140357213,"results":"40","hashOfConfig":"27"},{"size":24891,"mtime":1611402112702,"results":"41","hashOfConfig":"27"},{"size":4242,"mtime":1611150837540,"results":"42","hashOfConfig":"27"},{"size":3415,"mtime":1611153440537,"results":"43","hashOfConfig":"27"},{"size":7033,"mtime":1611153673908,"results":"44","hashOfConfig":"27"},{"size":8342,"mtime":1611410469910,"results":"45","hashOfConfig":"27"},{"size":27744,"mtime":1611500416504,"results":"46","hashOfConfig":"27"},{"size":44403,"mtime":1611405745122,"results":"47","hashOfConfig":"27"},{"size":3125,"mtime":1611405644271,"results":"48","hashOfConfig":"27"},{"size":4944,"mtime":1611153673901,"results":"49","hashOfConfig":"27"},{"size":3476,"mtime":1611414865126,"results":"50","hashOfConfig":"27"},{"size":12332,"mtime":1611569442207,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18ibiat",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/aj/Projects/personal/portfolio/src/App.js",[],"/Users/aj/Projects/personal/portfolio/src/reportWebVitals.js",[],["111","112"],"/Users/aj/Projects/personal/portfolio/src/index.js",[],["113","114"],"/Users/aj/Projects/personal/portfolio/src/Containers/Home/Home.js",[],["115","116"],"/Users/aj/Projects/personal/portfolio/src/Containers/About/About.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Skills/Skills.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Experience/Experience.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Resume/Resume.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Showcase.js",["117"],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban1/Kanban1.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban1/PipeView.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban1/DealsList.js",[],["118","119"],"/Users/aj/Projects/personal/portfolio/src/libs/validators.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban1/Explanation.js",[],["120","121"],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban2/Kanban2.js",["122"],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban2/PipeView.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban2/Explanation.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/OverviewStats.js",["123","124","125","126","127","128"],"import React, { useState, useEffect } from \"react\";\n\nimport {\n  Tabs,\n  Typography,\n  Spin,\n  Card,\n  Row,\n  Col,\n  Statistic,\n  Descriptions,\n  Divider,\n  Progress\n} from \"antd\";\n\nimport {\n  LoadingOutlined,\n  ArrowUpOutlined,\n  ArrowDownOutlined,\n  CheckCircleTwoTone,\n  BulbTwoTone,\n  HomeTwoTone,\n  DollarOutlined,\n  SmileTwoTone,\n  PhoneTwoTone,\n  MailTwoTone,\n  ThunderboltTwoTone,\n  DollarTwoTone,\n  FireTwoTone\n} from \"@ant-design/icons\";\n\n//import axios from \"axios\";\n\nimport \"./OverviewStats.css\";\n\nconst { TabPane } = Tabs;\nconst { Title } = Typography;\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nconst OverviewStats = props => {\n  const [something, setSomething] = useState(props.something);\n  const [dataLoaded, setLoaded] = useState(true);\n\n  const callback = key => {\n    console.log(key);\n  };\n\n  useEffect(() => {\n    setSomething(something);\n  }, [something]);\n\n  const stats = type => {\n    if (type === \"today\") {\n      return (\n        <div className=\"OverviewStats\">\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n            <Col span={16}>\n              <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n                <Col span={12}>\n                  <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n                    <Col span={24}>\n                      <Card className=\"majorStatCard\">20 Activities</Card>\n                    </Col>\n                    <Divider>across</Divider>\n                    <Col span={24}>\n                      <Card className=\"majorStatCard\">8 Deals</Card>\n                    </Col>\n                  </Row>\n                </Col>\n                <Col span={12}>\n                  <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n                    <Col span={12}>\n                      <Card className=\"minorStatCard\">5 Demos</Card>\n                    </Col>\n                    <Col span={12}>\n                      <Card className=\"minorStatCard\">1 Meeting(s)</Card>\n                    </Col>\n                    <Col span={12}>\n                      <Card className=\"minorStatCard\">8 Calls</Card>\n                    </Col>\n                    <Col span={12}>\n                      <Card className=\"minorStatCard\">4 Emails</Card>\n                    </Col>\n                    <Col span={24}>\n                      <Card className=\"minorStatCard\">2 Others</Card>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </Col>\n            <Col span={8}>\n              <Card title=\"Achieved\" className=\"statsCard\">\n                <Progress\n                  strokeColor={{\n                    from: \"#108ee9\",\n                    to: \"#87d068\"\n                  }}\n                  status=\"active\"\n                  percent={62}\n                />\n                <br />\n                <br />\n                <span className=\"statsCardSpan\">Quota $1000</span>\n                <br />\n                <br />\n                <span className=\"statsCardSpan\">8 Deals Won</span>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n            <Col span={24}>\n              <Card className=\"firstActCard\">\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n                  <Col span={24}>\n                    <span className=\"FACtitleSpan\">\n                      Call XYZ from ABS @ 09:30 for 10 minutes regarding Final\n                      Closure\n                    </span>\n                    <span className=\"FACInfoSpan\">1 of 20</span>\n                  </Col>\n                </Row>\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n                  <Col span={8}>\n                    <Card title=\"ABS Deal\" className=\"FACSpecifics\">\n                      <DollarTwoTone twoToneColor=\"#52c41a\" />\n                      <span className=\"emptySpan\" /> 1,000\n                      <br />\n                      <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                      <span className=\"emptySpan\" /> 3 Demos\n                      <br />\n                      <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                      <span className=\"emptySpan\" /> 7 Calls\n                      <br />\n                      <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                      <span className=\"emptySpan\" /> 15 Emails\n                      <br />\n                    </Card>\n                  </Col>\n                  <Col span={8}>\n                    <Card title=\"ABS Corporation\" className=\"FACSpecifics\">\n                      <HomeTwoTone />\n                      <span className=\"emptySpan\" /> California\n                      <br />\n                      <BulbTwoTone />\n                      <span className=\"emptySpan\" /> Software Development\n                      <br />\n                      <DollarTwoTone />\n                      <span className=\"emptySpan\" /> 10M Annual Revenue\n                      <br />\n                      <SmileTwoTone />\n                      <span className=\"emptySpan\" /> 500 Employees\n                      <br />\n                    </Card>\n                  </Col>\n                  <Col span={8}>\n                    <Card title=\"XYZ\" className=\"FACSpecifics\">\n                      <FireTwoTone twoToneColor=\"#FC902B\" />\n                      <span className=\"emptySpan\" /> Influencer\n                      <br />\n                      <PhoneTwoTone twoToneColor=\"#FC902B\" />\n                      <span className=\"emptySpan\" /> +1 345 232 2345\n                      <br />\n                      <MailTwoTone twoToneColor=\"#FC902B\" />\n                      <span className=\"emptySpan\" />{\" \"}\n                      <a\n                        href={`mailto:xyz@abs.com`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        xyz@abs.com\n                      </a>\n                      <br />\n                      <ThunderboltTwoTone twoToneColor=\"#FC902B\" />\n                      <span className=\"emptySpan\" /> 12 Interactions\n                      <br />\n                    </Card>\n                  </Col>\n                </Row>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div\n      className=\"site-layout-background\"\n      style={{ padding: 24, textAlign: \"center\" }}\n    >\n      <Title level={4}>Hey, Anwin. This is how your day looks like.</Title>\n      <Spin tip=\"Loading...\" indicator={antIcon} spinning={!dataLoaded}>\n        <Tabs className=\"mainAppTabs\" onChange={callback} type=\"card\">\n          <TabPane tab=\"Today\" key=\"1\">\n            {stats(\"today\")}\n          </TabPane>\n          <TabPane tab=\"Tomorrow\" key=\"2\">\n            Content of Tab Pane 2\n          </TabPane>\n          <TabPane tab=\"This Week\" key=\"3\">\n            Content of Tab Pane 3\n          </TabPane>\n        </Tabs>\n      </Spin>\n    </div>\n  );\n};\n\nexport default OverviewStats;\n",["129","130"],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/InboxComps/OtherActs.js",["131"],"import React, { useState } from \"react\";\n\nimport { Card, Row, Col } from \"antd\";\n\nimport {\n  PhoneTwoTone,\n  MailTwoTone,\n  LaptopOutlined,\n  CustomerServiceTwoTone,\n  MobileTwoTone,\n  PushpinTwoTone,\n  CoffeeOutlined,\n  ClockCircleTwoTone\n} from \"@ant-design/icons\";\n\nimport { parseISO, format } from \"date-fns\";\n\n//import axios from \"axios\";\n\nimport \"../../Activities.css\";\n\nconst taskIcons = [\n  <PhoneTwoTone twoToneColor=\"#19BAD1\" color=\"#19BAD1\" />,\n  <MobileTwoTone twoToneColor=\"#19BAD1\" color=\"#19BAD1\" />,\n  <MailTwoTone twoToneColor=\"#19BAD1\" color=\"#19BAD1\" />,\n  <CustomerServiceTwoTone twoToneColor=\"#19BAD1\" color=\"#19BAD1\" />,\n  <LaptopOutlined twoToneColor=\"#19BAD1\" color=\"#19BAD1\" />,\n  <PushpinTwoTone twoToneColor=\"#19BAD1\" color=\"#19BAD1\" />,\n  <CoffeeOutlined twoToneColor=\"#19BAD1\" color=\"#19BAD1\" />\n];\n\nconst OtherActs = props => {\n  const tabList = [\n    {\n      key: \"today\",\n      tab: `Today ( ${\n        props.allTodayActs !== undefined && props.allTodayActs.length > 0\n          ? props.allTodayActs.length\n          : 0\n      } )`\n    },\n    {\n      key: \"past\",\n      tab: `Past ( ${\n        props.allPastActs !== undefined && props.allPastActs.length > 0\n          ? props.allPastActs.length\n          : 0\n      } )`\n    },\n    {\n      key: \"future\",\n      tab: `Future ( ${\n        props.allFutureActs !== undefined && props.allFutureActs.length > 0\n          ? props.allFutureActs.length\n          : 0\n      } )`\n    }\n  ];\n\n  const contentList = {\n    today: (\n      <Card className=\"OtherActsCard\" size=\"small\" bordered={false}>\n        {props.allTodayActs !== undefined && props.allTodayActs.length > 0 ? (\n          props.allTodayActs.map(a => (\n            <div key={a.id}>\n              <Row>\n                <Col span={3}>\n                  {props.activityTypes !== undefined &&\n                  props.activityTypes.length > 0 &&\n                  props.activityTypes.find(at => at.id === a.activityTypeId)\n                    ? props.activityTypes.filter(\n                        at => at.id === a.activityTypeId\n                      )[0].activityTypeSlug\n                    : \"---\"}\n                </Col>\n                <Col span={21}>\n                  <Row>\n                    <Col>Title</Col>\n                    <Col>With</Col>\n                    <Col>Time</Col>\n                    <Col>Duration</Col>\n                  </Row>\n                </Col>\n              </Row>\n            </div>\n          ))\n        ) : (\n          <p>No Tasks scheduled for today</p>\n        )}\n      </Card>\n    ),\n    past: (\n      <Card className=\"OtherActsCard\" size=\"small\" bordered={false}>\n        {props.allPastActs !== undefined && props.allPastActs.length > 0 ? (\n          props.allPastActs.map(a => (\n            <Card\n              key={a.id}\n              className={\n                props.activity.id === a.id\n                  ? \"OACIActive OtherActsCardItems\"\n                  : \"OtherActsCardItems\"\n              }\n              size=\"small\"\n              bordered={false}\n            >\n              <Row>\n                <Col span={3}>\n                  <p className=\"slugP\">\n                    <>\n                      {props.activityTypes !== undefined &&\n                      props.activityTypes.length > 0 &&\n                      props.activityTypes.find(\n                        at => at.id === a.activityTypeId\n                      ) ? (\n                        <i\n                          className={\n                            props.activityTypes.filter(\n                              at => at.id === a.activityTypeId\n                            )[0].activityTypeSlug\n                          }\n                          style={{ color: \"#19BAD1\" }}\n                        />\n                      ) : (\n                        \"---\"\n                      )}\n                    </>\n                    {/*<PhoneTwoTone twoToneColor=\"#19BAD1\" />*/}\n                  </p>\n                </Col>\n                <Col span={14}>\n                  <Row>\n                    <Col span={24}>\n                      <p className=\"titleP\">{a.activityTitle}</p>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col span={24}>\n                      <p className=\"dealP\">\n                        {props.allDeals !== undefined &&\n                        props.allDeals.length > 0 &&\n                        a.dealId &&\n                        props.allDeals.find(d => d.id === a.dealId)\n                          ? props.allDeals.filter(d => d.id === a.dealId)[0]\n                              .dealName\n                          : \"---\"}\n                      </p>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col span={24}>\n                      <p className=\"withP\">\n                        {props.people !== undefined &&\n                        props.people.length > 0 &&\n                        props.people.find(p => p.id === a.contactId)\n                          ? props.people.filter(p => p.id === a.contactId)[0]\n                              .contactName\n                          : \"---\"}\n                        {\" | \"}\n                        {props.orgs !== undefined &&\n                        props.orgs.length > 0 &&\n                        props.orgs.find(o => o.id === a.orgId)\n                          ? props.orgs.filter(o => o.id === a.orgId)[0].orgName\n                          : \"---\"}\n                      </p>\n                    </Col>\n                  </Row>\n                </Col>\n                <Col span={7}>\n                  <Row>\n                    <Col span={24}>\n                      <p className=\"timeP\">\n                        <ClockCircleTwoTone twoToneColor=\"#fa4a09\" />{\" \"}\n                        {a.activityDate\n                          ? format(parseISO(a.activityDate), \"dd MMM yyyy\")\n                          : \"---\"}\n                      </p>\n                    </Col>\n                    <Col span={24}>\n                      <p className=\"timeP\">\n                        {a.duration ? a.duration + \" minutes\" : \"--\"}\n                      </p>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </Card>\n          ))\n        ) : (\n          <p>No Open tasks from the past</p>\n        )}\n      </Card>\n    ),\n    future: (\n      <Card className=\"OtherActsCard\" size=\"small\" bordered={false}>\n        {props.allFutureActs !== undefined && props.allFutureActs.length > 0 ? (\n          props.allFutureActs.map(a => (\n            <Card\n              key={a.id}\n              className=\"OtherActsCardItems\"\n              size=\"small\"\n              bordered={false}\n            >\n              <Row>\n                <Col span={3}>\n                  {props.activityTypes !== undefined &&\n                  props.activityTypes.length > 0 &&\n                  props.activityTypes.find(at => at.id === a.activityTypeId) ? (\n                    <>\n                      props.activityTypes.filter( at => at.id ===\n                      a.activityTypeId )[0].activityTypeSlug\n                    </>\n                  ) : (\n                    \"---\"\n                  )}\n                </Col>\n                <Col span={21}>\n                  <Row>\n                    <Col>Title</Col>\n                    <Col>With</Col>\n                    <Col>Time</Col>\n                    <Col>Duration</Col>\n                  </Row>\n                </Col>\n              </Row>\n            </Card>\n          ))\n        ) : (\n          <p>No Scheduled Tasks</p>\n        )}\n      </Card>\n    )\n  };\n\n  const [tabState, setTabState] = useState({\n    key:\n      props.allTodayActs !== undefined && props.allTodayActs.length > 0\n        ? \"today\"\n        : \"past\"\n  });\n\n  const onTabChange = (key, type) => {\n    console.log(key, type);\n    setTabState({ [type]: key });\n  };\n\n  return (\n    <div className=\"OtherActs\">\n      <Card\n        style={{ width: \"100%\", textAlign: \"center\" }}\n        tabList={tabList}\n        activeTabKey={tabState.key}\n        onTabChange={key => {\n          onTabChange(key, \"key\");\n        }}\n        size=\"small\"\n        className=\"OtherActsMainCard\"\n      >\n        {contentList[tabState.key]}\n      </Card>\n    </div>\n  );\n};\n\nexport default OtherActs;\n","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/Inbox.js",["132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148"],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/AllActivities.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Tasks.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/InboxComps/InboxHeader.js",["149","150","151","152","153"],"import React from \"react\";\n\nimport { Row, Col, Card } from \"antd\";\n\nimport { format, parseISO, isPast, sub } from \"date-fns\";\n\nimport {\n  CheckOutlined,\n  SmileTwoTone,\n  MehTwoTone,\n  PhoneTwoTone,\n  ClockCircleTwoTone\n} from \"@ant-design/icons\";\n\n//import axios from \"axios\";\n\nimport \"../../Activities.css\";\n\nconst InboxHeader = props => {\n  return (\n    <Row className=\"InboxHeaderRow\">\n      <Col span={!props.activity.isCompleted ? 2 : 1}>\n        <Card\n          size=\"small\"\n          className=\"statsCardIT\"\n          style={{ borderRadius: \"2px 0 0 2px\" }}\n        >\n          {props.activityTypes !== undefined &&\n          props.activityTypes.length > 0 &&\n          props.activityTypes.find(\n            at => at.id === props.activity.activityTypeId\n          ) ? (\n            <i\n              className={\n                props.activityTypes.filter(\n                  at => at.id === props.activity.activityTypeId\n                )[0].activityTypeSlug\n              }\n            />\n          ) : (\n            \"---\"\n          )}\n        </Card>\n      </Col>\n      <Col span={!props.activity.isCompleted ? 9 : 6}>\n        <Card size=\"small\" className=\"statsCardIT\">\n          With{\" \"}\n          {props.people !== undefined &&\n          props.people.length > 0 &&\n          props.activity.contactId !== undefined &&\n          props.activity.contactId !== null &&\n          props.people.find(c => c.id === props.activity.contactId)\n            ? props.people.filter(c => c.id === props.activity.contactId)[0]\n                .contactName\n            : \" N/A\"}{\" \"}\n          from{\" \"}\n          {props.orgs !== undefined &&\n          props.orgs.length > 0 &&\n          props.activity.orgId !== undefined &&\n          props.activity.orgId !== null &&\n          props.orgs.find(o => o.id === props.activity.orgId)\n            ? props.orgs.filter(o => o.id === props.activity.orgId)[0].orgName\n            : \" N/A\"}\n        </Card>\n      </Col>\n      <Col span={!props.activity.isCompleted ? 5 : 4}>\n        <Card size=\"small\" className=\"statsCardIT\">\n          <i\n            className=\"far fa-clock\"\n            style={\n              isPast(\n                sub(parseISO(props.activity.activityDate), {\n                  years: 0,\n                  months: 0,\n                  weeks: 0,\n                  days: 0,\n                  hours: 4 + props.dst,\n                  minutes: 30,\n                  seconds: 0\n                })\n              )\n                ? {\n                    cursor: \"pointer\",\n                    fontSize: \"16px\",\n                    color: \"#FF2929\"\n                  }\n                : {\n                    cursor: \"pointer\",\n                    fontSize: \"16px\",\n                    color: \"#19BAD1\"\n                  }\n            }\n          />{\" \"}\n          {format(parseISO(props.activity.activityDate), \"dd-MMM\").toString()}{\" \"}\n          {\" - \"}\n          {props.activity.activityTime\n            ? props.activity.activityTime.split(\":\")[0]\n            : \"--\"}\n          {\":\"}\n          {props.activity.activityTime\n            ? props.activity.activityTime.split(\":\")[1]\n            : \"--\"}\n          {props.activity.activityTime &&\n          parseInt(props.activity.activityTime.split(\":\")[0]) > 11\n            ? \" PM\"\n            : \" AM\"}{\" \"}\n        </Card>\n      </Col>\n      <Col span={!props.activity.isCompleted ? 4 : 3}>\n        <Card size=\"small\" className=\"statsCardIT\">\n          {props.activity.duration} minutes\n        </Card>\n      </Col>\n      <Col span={!props.activity.isCompleted ? 4 : 3}>\n        <Card\n          size=\"small\"\n          className=\"statsCardIT\"\n          style={\n            !props.activity.isCompleted ? { borderRadius: \"0 2px 2px 0\" } : null\n          }\n        >\n          {props.activity.isCompleted ? (\n            <i\n              className=\"fas fa-check\"\n              style={{ fontSize: \"16px\", color: \"#92F0AE\" }}\n            />\n          ) : (\n            \"Ongoing\"\n          )}\n        </Card>\n      </Col>\n      {props.activity.isCompleted ? (\n        <React.Fragment>\n          <Col span={3}>\n            <Card size=\"small\" className=\"statsCardIT\">\n              {props.activity.success ? (\n                <i\n                  className=\"far fa-grin-beam\"\n                  style={{ fontSize: \"16px\", color: \"#FF8823\" }}\n                />\n              ) : (\n                <i\n                  className=\"fas fa-heart-broken\"\n                  style={{ fontSize: \"16px\", color: \"#FF2929\" }}\n                />\n              )}\n            </Card>\n          </Col>\n          <Col span={4}>\n            <Card\n              size=\"small\"\n              className=\"statsCardIT\"\n              style={{ borderRadius: \"0 2px 2px 0\" }}\n            >\n              {props.activity.text ? props.activity.text : \"---\"}\n            </Card>\n          </Col>\n        </React.Fragment>\n      ) : null}\n    </Row>\n  );\n};\n\nexport default InboxHeader;\n","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/Explanation.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Contact/Contact.js",["154"],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"155","replacedBy":"159"},{"ruleId":"157","replacedBy":"160"},{"ruleId":"155","replacedBy":"161"},{"ruleId":"157","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":131,"column":6,"nodeType":"165","endLine":131,"endColumn":38,"suggestions":"166"},{"ruleId":"155","replacedBy":"167"},{"ruleId":"157","replacedBy":"168"},{"ruleId":"155","replacedBy":"169"},{"ruleId":"157","replacedBy":"170"},{"ruleId":"163","severity":1,"message":"164","line":129,"column":6,"nodeType":"165","endLine":138,"endColumn":4,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":10,"column":3,"nodeType":"174","messageId":"175","endLine":10,"endColumn":12},{"ruleId":"172","severity":1,"message":"176","line":11,"column":3,"nodeType":"174","messageId":"175","endLine":11,"endColumn":15},{"ruleId":"172","severity":1,"message":"177","line":18,"column":3,"nodeType":"174","messageId":"175","endLine":18,"endColumn":18},{"ruleId":"172","severity":1,"message":"178","line":19,"column":3,"nodeType":"174","messageId":"175","endLine":19,"endColumn":20},{"ruleId":"172","severity":1,"message":"179","line":23,"column":3,"nodeType":"174","messageId":"175","endLine":23,"endColumn":17},{"ruleId":"172","severity":1,"message":"180","line":42,"column":22,"nodeType":"174","messageId":"175","endLine":42,"endColumn":31},{"ruleId":"155","replacedBy":"181"},{"ruleId":"157","replacedBy":"182"},{"ruleId":"172","severity":1,"message":"183","line":22,"column":7,"nodeType":"174","messageId":"175","endLine":22,"endColumn":16},{"ruleId":"172","severity":1,"message":"184","line":35,"column":3,"nodeType":"174","messageId":"175","endLine":35,"endColumn":16},{"ruleId":"172","severity":1,"message":"185","line":36,"column":3,"nodeType":"174","messageId":"175","endLine":36,"endColumn":15},{"ruleId":"172","severity":1,"message":"186","line":37,"column":3,"nodeType":"174","messageId":"175","endLine":37,"endColumn":13},{"ruleId":"172","severity":1,"message":"187","line":38,"column":3,"nodeType":"174","messageId":"175","endLine":38,"endColumn":15},{"ruleId":"172","severity":1,"message":"188","line":39,"column":3,"nodeType":"174","messageId":"175","endLine":39,"endColumn":15},{"ruleId":"172","severity":1,"message":"189","line":56,"column":9,"nodeType":"174","messageId":"175","endLine":56,"endColumn":16},{"ruleId":"172","severity":1,"message":"190","line":63,"column":10,"nodeType":"174","messageId":"175","endLine":63,"endColumn":22},{"ruleId":"172","severity":1,"message":"191","line":63,"column":24,"nodeType":"174","messageId":"175","endLine":63,"endColumn":39},{"ruleId":"172","severity":1,"message":"192","line":68,"column":10,"nodeType":"174","messageId":"175","endLine":68,"endColumn":21},{"ruleId":"172","severity":1,"message":"193","line":72,"column":10,"nodeType":"174","messageId":"175","endLine":72,"endColumn":20},{"ruleId":"172","severity":1,"message":"194","line":79,"column":27,"nodeType":"174","messageId":"175","endLine":79,"endColumn":45},{"ruleId":"172","severity":1,"message":"195","line":92,"column":9,"nodeType":"174","messageId":"175","endLine":92,"endColumn":20},{"ruleId":"163","severity":1,"message":"196","line":294,"column":6,"nodeType":"165","endLine":294,"endColumn":38,"suggestions":"197"},{"ruleId":"172","severity":1,"message":"198","line":325,"column":9,"nodeType":"174","messageId":"175","endLine":325,"endColumn":26},{"ruleId":"172","severity":1,"message":"199","line":329,"column":9,"nodeType":"174","messageId":"175","endLine":329,"endColumn":27},{"ruleId":"172","severity":1,"message":"200","line":335,"column":9,"nodeType":"174","messageId":"175","endLine":335,"endColumn":29},{"ruleId":"172","severity":1,"message":"201","line":342,"column":9,"nodeType":"174","messageId":"175","endLine":342,"endColumn":21},{"ruleId":"172","severity":1,"message":"184","line":8,"column":3,"nodeType":"174","messageId":"175","endLine":8,"endColumn":16},{"ruleId":"172","severity":1,"message":"185","line":9,"column":3,"nodeType":"174","messageId":"175","endLine":9,"endColumn":15},{"ruleId":"172","severity":1,"message":"186","line":10,"column":3,"nodeType":"174","messageId":"175","endLine":10,"endColumn":13},{"ruleId":"172","severity":1,"message":"187","line":11,"column":3,"nodeType":"174","messageId":"175","endLine":11,"endColumn":15},{"ruleId":"172","severity":1,"message":"202","line":12,"column":3,"nodeType":"174","messageId":"175","endLine":12,"endColumn":21},{"ruleId":"203","severity":1,"message":"204","line":101,"column":23,"nodeType":"205","endLine":101,"endColumn":38},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],["206"],["207"],["206"],["207"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updatePipeDeals'. Either include it or remove the dependency array.","ArrayExpression",["208"],["206"],["207"],["206"],["207"],["209"],"no-unused-vars","'Statistic' is defined but never used.","Identifier","unusedVar","'Descriptions' is defined but never used.","'ArrowUpOutlined' is defined but never used.","'ArrowDownOutlined' is defined but never used.","'DollarOutlined' is defined but never used.","'setLoaded' is assigned a value but never used.",["206"],["207"],"'taskIcons' is assigned a value but never used.","'CheckOutlined' is defined but never used.","'SmileTwoTone' is defined but never used.","'MehTwoTone' is defined but never used.","'PhoneTwoTone' is defined but never used.","'UserOutlined' is defined but never used.","'TabPane' is assigned a value but never used.","'showDealType' is assigned a value but never used.","'setShowDealType' is assigned a value but never used.","'noActsToday' is assigned a value but never used.","'noActsPast' is assigned a value but never used.","'setFilteredUserAct' is assigned a value but never used.","'selectActId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.dst', 'props.processedActs', and 'props.today'. Either include them or remove the dependency array. If 'setCurrentAct' needs the current value of 'props.dst', you can also switch to useReducer instead of useState and read 'props.dst' in the reducer.",["210"],"'saveEditorContent' is assigned a value but never used.","'getSavedEditorData' is assigned a value but never used.","'renderContentAsRawJs' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'ClockCircleTwoTone' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [pipeId, selectedUserId, teamId, updatePipeDeals]",{"range":"217","text":"218"},"Update the dependencies array to be: [props.deals, props.activities, props.orgs, props.pipelines, props.stages, props.selectedUserId, props.teamId, props.pipeId, updatePipeDeals]",{"range":"219","text":"220"},"Update the dependencies array to be: [filteredUserAct, props.dst, props.processedActs, props.today, selectedActId]",{"range":"221","text":"222"},[4376,4408],"[pipeId, selectedUserId, teamId, updatePipeDeals]",[3456,3616],"[props.deals, props.activities, props.orgs, props.pipelines, props.stages, props.selectedUserId, props.teamId, props.pipeId, updatePipeDeals]",[8065,8097],"[filteredUserAct, props.dst, props.processedActs, props.today, selectedActId]"]