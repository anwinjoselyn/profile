[{"/Users/aj/Projects/personal/portfolio/src/App.js":"1","/Users/aj/Projects/personal/portfolio/src/reportWebVitals.js":"2","/Users/aj/Projects/personal/portfolio/src/index.js":"3","/Users/aj/Projects/personal/portfolio/src/Containers/Home/Home.js":"4","/Users/aj/Projects/personal/portfolio/src/Containers/About/About.js":"5","/Users/aj/Projects/personal/portfolio/src/Containers/Skills/Skills.js":"6","/Users/aj/Projects/personal/portfolio/src/Containers/Experience/Experience.js":"7","/Users/aj/Projects/personal/portfolio/src/Containers/Resume/Resume.js":"8","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Showcase.js":"9","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban1/Kanban1.js":"10","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban1/PipeView.js":"11","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban1/DealsList.js":"12","/Users/aj/Projects/personal/portfolio/src/libs/validators.js":"13","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban1/Explanation.js":"14","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban2/Kanban2.js":"15","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban2/PipeView.js":"16","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban2/Explanation.js":"17","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/OverviewStats.js":"18","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/InboxComps/OtherActs.js":"19","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/Inbox.js":"20","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/AllActivities.js":"21","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Tasks.js":"22","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/InboxComps/InboxHeader.js":"23","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/Explanation.js":"24","/Users/aj/Projects/personal/portfolio/src/Containers/Contact/Contact.js":"25","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Overview.js":"26","/Users/aj/Projects/personal/portfolio/src/Containers/Badges/Badges.js":"27","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Parser/Components/Leads.js":"28","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Parser/Components/Sidebar.js":"29","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Parser/Components/Campaigns.js":"30","/Users/aj/Projects/personal/portfolio/src/config/index.js":"31","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Parser/Parser.js":"32","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Parser/Components/Explanation.js":"33","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Templates/Templates.js":"34","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Templates/Components/Create.js":"35","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Templates/Components/Edit.js":"36","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Templates/Components/View.js":"37","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Templates/Components/Explanation.js":"38","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Components/ShowOrgs.js":"39","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Timeline1.js":"40","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Components/ShowContacts.js":"41","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Components/ShowOneContact.js":"42","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Components/SmartBcc.js":"43","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Components/Overview.js":"44","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Components/ShowDetails.js":"45","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Components/TimelineItem.js":"46","/Users/aj/Projects/personal/portfolio/src/Components/LoaderButton.js":"47","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Components/Timeline.js":"48","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Components/Explanation.js":"49"},{"size":5914,"mtime":1612352944124,"results":"50","hashOfConfig":"51"},{"size":362,"mtime":1610542186091,"results":"52","hashOfConfig":"51"},{"size":492,"mtime":1612278035478,"results":"53","hashOfConfig":"51"},{"size":1689,"mtime":1611585251215,"results":"54","hashOfConfig":"51"},{"size":5150,"mtime":1610793531765,"results":"55","hashOfConfig":"51"},{"size":7397,"mtime":1611498366469,"results":"56","hashOfConfig":"51"},{"size":12675,"mtime":1610805444666,"results":"57","hashOfConfig":"51"},{"size":24006,"mtime":1611224634960,"results":"58","hashOfConfig":"51"},{"size":30816,"mtime":1612349266300,"results":"59","hashOfConfig":"51"},{"size":9815,"mtime":1612349180005,"results":"60","hashOfConfig":"51"},{"size":3717,"mtime":1610982697397,"results":"61","hashOfConfig":"51"},{"size":28608,"mtime":1611068222674,"results":"62","hashOfConfig":"51"},{"size":3558,"mtime":1610970869232,"results":"63","hashOfConfig":"51"},{"size":3314,"mtime":1611657511138,"results":"64","hashOfConfig":"51"},{"size":24891,"mtime":1611402112702,"results":"65","hashOfConfig":"51"},{"size":4242,"mtime":1611150837540,"results":"66","hashOfConfig":"51"},{"size":3415,"mtime":1611153440537,"results":"67","hashOfConfig":"51"},{"size":7033,"mtime":1611153673908,"results":"68","hashOfConfig":"51"},{"size":8330,"mtime":1611749745917,"results":"69","hashOfConfig":"51"},{"size":27932,"mtime":1611749947821,"results":"70","hashOfConfig":"51"},{"size":44403,"mtime":1611405745122,"results":"71","hashOfConfig":"51"},{"size":3125,"mtime":1611405644271,"results":"72","hashOfConfig":"51"},{"size":4792,"mtime":1611749755232,"results":"73","hashOfConfig":"51"},{"size":5201,"mtime":1611658469112,"results":"74","hashOfConfig":"51"},{"size":13691,"mtime":1611571827337,"results":"75","hashOfConfig":"51"},{"size":1248,"mtime":1611660343826,"results":"76","hashOfConfig":"51"},{"size":1825,"mtime":1611664240219,"results":"77","hashOfConfig":"51"},{"size":129320,"mtime":1611921997490,"results":"78","hashOfConfig":"51"},{"size":3863,"mtime":1611755094169,"results":"79","hashOfConfig":"51"},{"size":35215,"mtime":1611932307253,"results":"80","hashOfConfig":"51"},{"size":111,"mtime":1611924631432,"results":"81","hashOfConfig":"51"},{"size":797,"mtime":1611833361491,"results":"82","hashOfConfig":"51"},{"size":3535,"mtime":1611932136107,"results":"83","hashOfConfig":"51"},{"size":21442,"mtime":1611999855577,"results":"84","hashOfConfig":"51"},{"size":14122,"mtime":1611929446428,"results":"85","hashOfConfig":"51"},{"size":14465,"mtime":1611931280504,"results":"86","hashOfConfig":"51"},{"size":7874,"mtime":1611999905623,"results":"87","hashOfConfig":"51"},{"size":3864,"mtime":1611932148748,"results":"88","hashOfConfig":"51"},{"size":5909,"mtime":1612347884235,"results":"89","hashOfConfig":"51"},{"size":56203,"mtime":1612352874088,"results":"90","hashOfConfig":"51"},{"size":1736,"mtime":1612348493433,"results":"91","hashOfConfig":"51"},{"size":9450,"mtime":1612348359410,"results":"92","hashOfConfig":"51"},{"size":3513,"mtime":1612352386763,"results":"93","hashOfConfig":"51"},{"size":3237,"mtime":1612088771619,"results":"94","hashOfConfig":"51"},{"size":3529,"mtime":1612348060179,"results":"95","hashOfConfig":"51"},{"size":5639,"mtime":1612000402918,"results":"96","hashOfConfig":"51"},{"size":638,"mtime":1612000625738,"results":"97","hashOfConfig":"51"},{"size":2693,"mtime":1612000402915,"results":"98","hashOfConfig":"51"},{"size":3463,"mtime":1612352062188,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18ibiat",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"104"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aj/Projects/personal/portfolio/src/App.js",[],"/Users/aj/Projects/personal/portfolio/src/reportWebVitals.js",[],["213","214"],"/Users/aj/Projects/personal/portfolio/src/index.js",[],["215","216"],"/Users/aj/Projects/personal/portfolio/src/Containers/Home/Home.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/About/About.js",[],["217","218"],"/Users/aj/Projects/personal/portfolio/src/Containers/Skills/Skills.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Experience/Experience.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Resume/Resume.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Showcase.js",["219","220"],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban1/Kanban1.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban1/PipeView.js",[],["221","222"],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban1/DealsList.js",[],["223","224"],"/Users/aj/Projects/personal/portfolio/src/libs/validators.js",[],["225","226"],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban1/Explanation.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban2/Kanban2.js",["227"],"import React, {\n  useState,\n  useEffect\n  //useCallback\n} from \"react\";\n\nimport { isAfter, parseISO, isEqual, format } from \"date-fns\";\n\nimport {\n  Button,\n  Card,\n  //Table,\n  Row,\n  Col,\n  Select,\n  //Tabs,\n  Switch\n} from \"antd\";\n\nimport {\n  UserOutlined,\n  CalendarOutlined,\n  FilterOutlined\n  //UnorderedListOutlined,\n  //MailOutlined,\n  //DollarTwoTone,\n  //ContactsOutlined,\n  //HomeOutlined\n} from \"@ant-design/icons\";\n\n//import axios from \"axios\";\n\nimport PipeView from \"./PipeView\";\nimport Explanation from \"./Explanation\";\n\nimport \"./Kanban2.css\";\n\nconst { Option } = Select;\n//const { TabPane } = Tabs;\n\n//const mockDeals = require(\"./Mockdata/mockDeals.json\").data;\n//const mockActivities = require(\"../../mockdata/activities.json\").data;\n\nconst Kanban2 = props => {\n  const [dataLoaded, setLoaded] = useState(false);\n\n  const topColors = [\"#FC902B\", \"#2ADDF5\", \"#2A45F7\", \"#87ED90\"];\n  const todaysDate = format(new Date(), \"yyyy-MM-dd\");\n  const [allDeals, setAllDeals] = useState([]);\n  //const [activities, setActivities] = useState(props.activities);\n\n  const [selectedTeamId, setTeamId] = useState(0);\n  const [selectedPipeId, setPipeId] = useState(0);\n  const [filteredStages, setFilteredStages] = useState([]);\n  const [currentPipeDeals, setCurrentPipeDeals] = useState([]);\n  const [total, setTotal] = useState([]);\n  const [selectedUserId, setUserId] = useState(0);\n\n  const [currentDealActs, setCurrentDealActs] = useState([]);\n  //const [actShow, setActShow] = useState(true);\n  const [currentDeal, setCurrentDeal] = useState({});\n\n  const [currentTeamTarget, setCurrentTeamTarget] = useState(\n    props.currentTeamTarget\n  );\n  const [currentUserTarget, setCurrentUserTarget] = useState(\n    props.currentUserTarget\n  );\n  const [userQuota, setUserQuota] = useState(0);\n  const [userAchieved, setUserAchieved] = useState(0);\n  const [teamAchieved, setTeamAchieved] = useState(0);\n  const [teamQuota, setTeamQuota] = useState(0);\n  const [dealsInDND, setDNDDeals] = useState([]);\n  const [dealsValue, setDealsValue] = useState(0);\n  const [toggle, setToggle] = useState(true);\n\n  useEffect(() => {\n    //setAllDeals(props.deals);\n    //console.log(\"allDeals\", allDeals);\n    //console.log(\"activities\", activities);\n    //console.log(\"props.users\", props.users);\n\n    let deals = props.deals.filter(\n      deal =>\n        deal.isActive &&\n        (deal.statusId === 1 ||\n          deal.statusId === 3 ||\n          deal.statusId === 4 ||\n          deal.statusId === 6)\n    );\n\n    let teamId = props.teamId;\n    let pipeId = props.pipeId;\n    let stages = [];\n\n    if (pipeId > 0) {\n      stages = props.stages.filter(s => s.pipeId === pipeId && s.isActive);\n    }\n\n    let filteredDeals = [];\n\n    if (stages.length > 0) {\n      //console.log(\"stages length\", stages.length);\n      filteredDeals = deals.filter(ad => stages.find(s => s.id === ad.stageId));\n    }\n\n    setTeamId(teamId);\n    setPipeId(pipeId);\n    setFilteredStages(stages);\n    setCurrentPipeDeals(filteredDeals);\n    setUserId(props.selectedUserId);\n    setAllDeals(deals);\n\n    //console.log(\"teamId\", teamId);\n    //console.log(\"pipeId\", pipeId);\n    //console.log(\"stages\", stages);\n    //console.log(\"currentPipeDeals\", currentPipeDeals);\n    //console.log(\"currentPipeDeals\", filteredDeals);\n\n    updatePipeDeals(\n      stages,\n      pipeId,\n      filteredDeals,\n      props.orgs,\n      props.activities,\n      props.selectedUserId,\n      teamId\n    );\n  }, [\n    props.deals,\n    props.activities,\n    props.orgs,\n    props.pipelines,\n    props.stages,\n    props.selectedUserId,\n    props.teamId,\n    props.pipeId\n  ]);\n\n  const selectPipe = value => {\n    console.log(\"value\");\n    let pipeId = parseInt(value);\n    console.log(\"pipeId\");\n    let filtered = props.stages.filter(\n      stage => parseInt(stage.pipeId) === pipeId\n    );\n\n    let teamId = props.pipelines.filter(pipe => pipe.id === pipeId)[0].teamId;\n    console.log(\"teamId\", teamId);\n    let filteredDeals = [];\n    if (filtered.length > 0) {\n      //console.log(\"stages length\", stages.length);\n      filteredDeals = props.deals.filter(ad =>\n        filtered.find(s => s.id === ad.stageId)\n      );\n    }\n\n    setPipeId(pipeId);\n    setFilteredStages(filtered);\n    setTeamId(teamId);\n    setUserId(0);\n    //setCurrentPipeDeals(filteredDeals)\n\n    console.log(\"filtered\", filtered);\n\n    //console.log(\"teamId\", teamId);\n\n    updatePipeDeals(\n      filtered,\n      pipeId,\n      filteredDeals,\n      props.orgs,\n      props.activities,\n      0,\n      teamId\n    );\n  };\n\n  const handleSelectUser = value => {\n    console.log(\"value\", value);\n    let selectedUserId = parseInt(value);\n    setUserId(selectedUserId);\n    console.log(\"selectedUserId\", selectedUserId);\n    console.log(\"selectedPipeId\", selectedPipeId);\n    console.log(\"selectedTeamId\", selectedTeamId);\n\n    let filteredDeals = [];\n    if (selectedUserId > 0) {\n      //console.log(\"stages length\", stages.length);\n      filteredDeals = allDeals.filter(deal =>\n        filteredStages.find(\n          stage =>\n            parseInt(deal.stageId) === parseInt(stage.id) &&\n            parseInt(deal.userId) === parseInt(selectedUserId)\n        )\n      );\n    } else if (selectedUserId === -1) {\n      filteredDeals = allDeals.filter(\n        ad =>\n          props.usersByTeam[6].find(u => u.id === ad.userId) &&\n          filteredStages.find(s => s.id === ad.stageId)\n      );\n    } else if (selectedUserId === 0) {\n      filteredDeals = allDeals.filter(ad =>\n        filteredStages.find(s => s.id === ad.stageId)\n      );\n    }\n\n    updatePipeDeals(\n      filteredStages,\n      selectedPipeId,\n      filteredDeals,\n      props.orgs,\n      props.activities,\n      selectedUserId,\n      selectedTeamId\n    );\n  };\n\n  const onDragStart = (event, id) => {\n    console.log(\"dragstart on div/deal: \", id);\n    event.dataTransfer.setData(\"id\", id);\n  };\n\n  const onDragOver = event => {\n    event.preventDefault();\n  };\n\n  const onDrop = (event, stageId) => {\n    event.preventDefault();\n    let dealId = event.dataTransfer.getData(\"id\");\n\n    let originalStageID = currentPipeDeals.filter(\n      deal => deal.id === parseInt(dealId)\n    )[0].stageId;\n    //console.log(\"dealId\", dealId);\n    //console.log(\"originalStageID\", originalStageID);\n    /*\n    let newStageId = {\n      stageId: parseInt(stageId)\n    };\n*/\n    if (originalStageID !== parseInt(stageId)) {\n      let tempAllDeals = props.deals;\n      let tempFilteredDeals = currentPipeDeals;\n      let id = parseInt(dealId);\n\n      if (tempAllDeals.find(ad => ad.id === id)) {\n        tempAllDeals = tempAllDeals.map(ad => {\n          if (ad.id === id) {\n            ad.stageId = stageId;\n          }\n          return ad;\n        });\n      }\n      if (tempFilteredDeals.find(d => d.id === id)) {\n        tempFilteredDeals = tempFilteredDeals.map(d => {\n          if (d.id === id) {\n            d.stageId = stageId;\n          }\n          return d;\n        });\n      }\n      setCurrentPipeDeals(tempFilteredDeals);\n      setAllDeals(tempAllDeals);\n\n      updatePipeDeals(\n        filteredStages,\n        selectedPipeId,\n        tempAllDeals,\n        props.orgs,\n        props.activities,\n        selectedUserId,\n        selectedTeamId\n      );\n    }\n  };\n\n  const updateTargetsAndAchieved = teamId => {\n    console.log(\"props.userTargets\", props.userTargets);\n    let currentUserTarget =\n      props.userTargets !== null &&\n      props.userTargets !== undefined &&\n      selectedUserId !== 0 &&\n      props.userTargets.find(ut => ut.userId === selectedUserId)\n        ? props.userTargets.filter(ut => ut.userId === selectedUserId)[0]\n        : {};\n\n    let currentTeamTarget =\n      props.teamTargets !== null &&\n      props.teamTargets !== undefined &&\n      props.teamTargets.find(tt => tt.teamId === teamId)\n        ? props.teamTargets.filter(tt => tt.teamId === teamId)[0]\n        : {};\n\n    console.log(\"currentTeamTarget\", currentTeamTarget);\n    console.log(\"currentUserTarget\", currentUserTarget);\n    let userAchieved = 0;\n    let userQuota = 0;\n    let teamAchieved = 0;\n    let teamQuota = 0;\n    let cMN = parseInt(format(new Date(), \"MM\"));\n    console.log(\"cMN\", cMN);\n    let currentMonth =\n      cMN !== undefined && cMN !== null\n        ? cMN === 1\n          ? \"m1\"\n          : cMN === 2\n          ? \"m2\"\n          : cMN === 3\n          ? \"m3\"\n          : cMN === 4\n          ? \"m4\"\n          : cMN === 5\n          ? \"m5\"\n          : cMN === 6\n          ? \"m6\"\n          : cMN === 7\n          ? \"m7\"\n          : cMN === 8\n          ? \"m8\"\n          : cMN === 9\n          ? \"m9\"\n          : cMN === 10\n          ? \"m10\"\n          : cMN === 11\n          ? \"m11\"\n          : cMN === 12\n          ? \"m12\"\n          : null\n        : null;\n    console.log(\"currentMonth\", currentMonth);\n    if (currentUserTarget) {\n      switch (currentMonth) {\n        default:\n          break;\n        case \"m1\":\n          userQuota = currentUserTarget.m1;\n          break;\n        case \"m2\":\n          userQuota = currentUserTarget.m2;\n          break;\n        case \"m3\":\n          userQuota = currentUserTarget.m3;\n          break;\n        case \"m4\":\n          userQuota = currentUserTarget.m4;\n          break;\n        case \"m5\":\n          userQuota = currentUserTarget.m5;\n          break;\n        case \"m6\":\n          userQuota = currentUserTarget.m6;\n          break;\n        case \"m7\":\n          userQuota = currentUserTarget.m7;\n          break;\n        case \"m8\":\n          userQuota = currentUserTarget.m8;\n          break;\n        case \"m9\":\n          userQuota = currentUserTarget.m9;\n          break;\n        case \"m10\":\n          userQuota = currentUserTarget.m10;\n          break;\n        case \"m11\":\n          userQuota = currentUserTarget.m11;\n          break;\n        case \"m12\":\n          userQuota = currentUserTarget.m12;\n          break;\n      }\n    } else {\n      userQuota = 0;\n      switch (currentMonth) {\n        default:\n          break;\n        case \"m1\":\n          teamQuota = currentTeamTarget.m1;\n          break;\n        case \"m2\":\n          teamQuota = currentTeamTarget.m2;\n          break;\n        case \"m3\":\n          teamQuota = currentTeamTarget.m3;\n          break;\n        case \"m4\":\n          teamQuota = currentTeamTarget.m4;\n          break;\n        case \"m5\":\n          teamQuota = currentTeamTarget.m5;\n          break;\n        case \"m6\":\n          teamQuota = currentTeamTarget.m6;\n          break;\n        case \"m7\":\n          teamQuota = currentTeamTarget.m7;\n          break;\n        case \"m8\":\n          teamQuota = currentTeamTarget.m8;\n          break;\n        case \"m9\":\n          teamQuota = currentTeamTarget.m9;\n          break;\n        case \"m10\":\n          teamQuota = currentTeamTarget.m10;\n          break;\n        case \"m11\":\n          teamQuota = currentTeamTarget.m11;\n          break;\n        case \"m12\":\n          teamQuota = currentTeamTarget.m12;\n          break;\n      }\n    }\n    console.log(\"userQuota\", userQuota);\n    console.log(\"selectedUserId\", selectedUserId);\n    console.log(\"teamId\", teamId);\n    allDeals.forEach(ad => {\n      if (teamId === 3) {\n        if (\n          ad.wonDate !== null &&\n          ad.wonDate !== undefined &&\n          parseInt(format(parseISO(ad.wonDate), \"MM\")) === cMN\n        ) {\n          teamAchieved += 1;\n          if (\n            ad.wonUserId !== null &&\n            ad.wonUserId !== undefined &&\n            selectedUserId !== 0 &&\n            ad.wonUserId === selectedUserId\n          ) {\n            userAchieved += 1;\n          }\n        }\n      } else if (teamId === 1) {\n        if (\n          ad.mqlDate !== null &&\n          ad.mqlDate !== undefined &&\n          parseInt(format(parseISO(ad.mqlDate), \"MM\")) === cMN\n        ) {\n          teamAchieved += 1;\n          if (\n            ad.mqlUserId !== null &&\n            ad.mqlUserId !== undefined &&\n            selectedUserId !== 0 &&\n            ad.mqlUserId === selectedUserId\n          ) {\n            userAchieved += 1;\n          }\n        }\n      } else if (teamId === 2) {\n        if (\n          ad.sqlDate !== null &&\n          ad.sqlDate !== undefined &&\n          parseInt(format(parseISO(ad.sqlDate), \"MM\")) === cMN\n        ) {\n          teamAchieved += 1;\n          if (\n            ad.sqlUserId !== null &&\n            ad.sqlUserId !== undefined &&\n            selectedUserId !== 0 &&\n            ad.sqlUserId === selectedUserId\n          ) {\n            userAchieved += 1;\n          }\n        }\n      }\n    });\n    console.log(\"userAchieved\", userAchieved);\n    console.log(\"teamAchieved\", teamAchieved);\n\n    setCurrentTeamTarget(currentTeamTarget);\n    setCurrentUserTarget(currentUserTarget);\n    setUserQuota(userQuota);\n    setUserAchieved(userAchieved);\n    setTeamAchieved(teamAchieved);\n    setTeamQuota(teamQuota);\n    setLoaded(true);\n  };\n\n  const updatePipeDeals = (\n    filteredStages,\n    pipeId,\n    deals,\n    orgs,\n    activities,\n    selectedUserId,\n    teamId\n  ) => {\n    if (dataLoaded) setLoaded(false);\n    let object = [];\n    let filteredDeals = props.deals.filter(d =>\n      filteredStages.find(s => s.id === d.stageId)\n    );\n    let tempTotal = [];\n    //console.log(\"filteredDeals\", filteredDeals);\n\n    if (parseInt(selectedUserId) > 0) {\n      filteredDeals = filteredDeals.filter(\n        deal => deal.userId === parseInt(selectedUserId)\n      );\n\n      setCurrentPipeDeals(filteredDeals);\n    }\n    console.log(\"filteredDeals\", filteredDeals);\n\n    filteredStages.forEach(stage => {\n      tempTotal[stage.id] = 0;\n      filteredDeals.forEach(deal => {\n        //console.log(\"deal.dealValue\", deal.dealValue);\n\n        if (deal.stageId === stage.id) {\n          tempTotal[stage.id] +=\n            deal.dealValue !== null &&\n            deal.dealValue !== undefined &&\n            !isNaN(parseInt(deal.dealValue))\n              ? parseInt(deal.dealValue)\n              : 0;\n        }\n      });\n    });\n\n    console.log(\"tempTotal\", tempTotal);\n    setTotal(tempTotal);\n\n    let sum = 0;\n    if (filteredDeals !== undefined && filteredDeals.length > 0)\n      filteredDeals.forEach(deal => {\n        sum +=\n          deal.dealValue !== null &&\n          deal.dealValue !== undefined &&\n          !isNaN(parseInt(deal.dealValue))\n            ? parseInt(deal.dealValue)\n            : 0;\n      });\n\n    console.log(\"sum\", sum);\n    console.log(\"filteredDeals\", filteredDeals);\n    filteredStages.forEach(stage => (object[stage.id] = []));\n    console.log(\"object\", object);\n\n    if (filteredDeals !== undefined && filteredDeals.length > 0) {\n      filteredDeals.forEach((deal, key) => {\n        //console.log(\"deal.stageId\", deal.stageId);\n        //console.log(\"deal\", deal);\n        console.log(\"deal.stageId\", deal.stageId);\n        if (deal && deal.stageId)\n          object[deal.stageId].push(\n            <Card\n              hoverable\n              size=\"small\"\n              bordered={false}\n              onDragStart={event => onDragStart(event, deal.id)}\n              draggable\n              key={deal.id}\n              className=\"draggable2\"\n            >\n              <p className=\"detailsP\">\n                <span\n                  style={\n                    deal.stageId ===\n                    filteredStages.sort((a, b) => a.order - b.order)[\n                      filteredStages.length - 1\n                    ].id\n                      ? {\n                          color: `${topColors[topColors.length - 1]}`\n                        }\n                      : deal.stageId ===\n                        filteredStages.sort((a, b) => a.order - b.order)[0].id\n                      ? {\n                          color: `${topColors[0]}`\n                        }\n                      : {\n                          color: `${topColors[1]}`\n                        }\n                  }\n                >\n                  {deal.dealName}\n                </span>\n                <span className=\"userIconDraggable\">\n                  <UserOutlined />\n                </span>\n              </p>\n\n              <p>\n                {deal.orgId !== null &&\n                deal.orgId !== undefined &&\n                props.orgs.find(org => org.id === deal.orgId) ? (\n                  <span>\n                    {props.orgs.filter(org => org.id === deal.orgId)[0].orgName}\n                  </span>\n                ) : null}\n              </p>\n              <p>\n                <span className=\"footerSpan2\">\n                  ${\" \"}\n                  {!isNaN(parseInt(deal.dealValue))\n                    ? parseInt(deal.dealValue).toLocaleString()\n                    : 0}\n                </span>\n                <Button\n                  onClick={() => handleShowAct(deal.id)}\n                  className=\"actButton2\"\n                >\n                  {props.activities !== undefined &&\n                  props.activities !== null &&\n                  props.activities.length > 0 &&\n                  props.activities.find(\n                    act => act.dealId === deal.id && !act.isCompleted\n                  ) ? (\n                    props.activities.find(\n                      act =>\n                        act.dealId === deal.id &&\n                        !act.isCompleted &&\n                        isAfter(\n                          parseISO(act.activityDate),\n                          parseISO(todaysDate)\n                        )\n                    ) ? (\n                      <CalendarOutlined className=\"PBLightGreen\" />\n                    ) : activities.find(\n                        act =>\n                          act.dealId === deal.id &&\n                          !act.isCompleted &&\n                          isEqual(\n                            parseISO(act.activityDate),\n                            parseISO(todaysDate)\n                          )\n                      ) ? (\n                      <CalendarOutlined className=\"orange\" />\n                    ) : (\n                      <CalendarOutlined className=\"PBRed\" />\n                    )\n                  ) : (\n                    <CalendarOutlined className=\"PBYellow\" />\n                  )}\n                </Button>\n              </p>\n            </Card>\n          );\n      });\n    }\n    console.log(\"object\", object);\n    setDealsValue(sum);\n    setDNDDeals(object);\n\n    updateTargetsAndAchieved(teamId);\n  };\n\n  const handleShowAct = dealId => {\n    //console.log(\"dealId\", dealId);\n    let filteredacts = props.activities.filter(\n      act => act.dealId === dealId && !act.isCompleted\n    );\n    //console.log(\"filteredacts\", filteredacts);\n    let currentDeal = allDeals.find(deal => deal.id === dealId)\n      ? allDeals.filter(deal => deal.id === dealId)[0]\n      : {};\n    //console.log(\"currentDeal\", currentDeal);\n\n    setCurrentDealActs(filteredacts);\n    //setActShow(true);\n    setCurrentDeal(currentDeal);\n\n    //console.log(\"this.state.actShow\", this.state.actShow);\n  };\n\n  useEffect(() => {\n    setLoaded(true);\n  }, []);\n\n  const onChange = checked => {\n    console.log(`switch to ${checked}`);\n\n    setToggle(checked);\n  };\n\n  const topData = () => {\n    return (\n      <div>\n        <Row style={{ margin: \"0.5em 0 1em 0\" }}>\n          <Col span={24} style={{ textAlign: \"center\", display: \"block\" }}>\n            <h2\n              style={{\n                textAlign: \"center\",\n                padding: \"0.3em\",\n                fontSize: \"1.2em\"\n              }}\n            >\n              {toggle ? \" Pipelines Kanban View \" : \" Brief Explanation \"}{\" \"}\n              <Switch\n                size=\"small\"\n                style={{ padding: \"0.3em\" }}\n                defaultChecked\n                onChange={onChange}\n              />\n            </h2>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={3}>\n            <Card size=\"small\" className=\"statsCardDeals\">\n              {currentPipeDeals !== undefined &&\n              currentPipeDeals !== null &&\n              currentPipeDeals.length > 0\n                ? currentPipeDeals.length.toString()\n                : 0}{\" \"}\n              <small style={{ color: \"#19BAD1\" }}>Deal(s)</small>\n            </Card>\n          </Col>\n          <Col span={3}>\n            <Card size=\"small\" className=\"statsCardDeals\">\n              <small style={{ color: \"#19BAD1\" }}>Worth </small>{\" \"}\n              {!isNaN(dealsValue) ? parseInt(dealsValue).toLocaleString() : 0}\n            </Card>\n          </Col>\n          <Col span={3}>\n            <Card size=\"small\" className=\"statsCardDeals\">\n              <small style={{ color: \"#19BAD1\" }}>To Win </small>{\" \"}\n              {selectedUserId !== 0 ? userQuota : teamQuota}\n            </Card>\n          </Col>\n          <Col span={3}>\n            <Card size=\"small\" className=\"statsCardDeals\">\n              {selectedUserId !== 0 ? userAchieved : teamAchieved}{\" \"}\n              <small style={{ color: \"#19BAD1\" }}>Achieved </small>\n            </Card>\n          </Col>\n          <Col span={3}>\n            <Card size=\"small\" className=\"statsCardDeals\">\n              {selectedUserId !== 0\n                ? userQuota - userAchieved\n                : teamQuota - teamAchieved}{\" \"}\n              <small style={{ color: \"#19BAD1\" }}>Remaining </small>\n            </Card>\n          </Col>\n          <Col span={3}>\n            <Card size=\"small\" className=\"statsCardDeals\">\n              <small style={{ color: \"#19BAD1\" }}>Team Acheved </small>{\" \"}\n              {teamAchieved}\n            </Card>\n          </Col>\n          <Col span={3}>\n            <Card size=\"small\" className=\"statsCardDeals\">\n              <Select\n                size=\"small\"\n                value={selectedPipeId}\n                onChange={selectPipe}\n                bordered={false}\n                suffixIcon={<FilterOutlined className=\"selectIcon\" />}\n              >\n                {props.pipelines\n                  .filter(pipe => pipe.teamId <= 3)\n                  .sort((a, b) => a.teamId - b.teamId)\n                  .map(p => (\n                    <Option key={p.id} value={p.id}>\n                      {p.pipeName}\n                    </Option>\n                  ))}\n              </Select>\n            </Card>\n          </Col>\n          <Col span={3}>\n            <Card size=\"small\" className=\"statsCardDeals\">\n              <Select\n                size=\"small\"\n                bordered={false}\n                value={selectedUserId}\n                onChange={handleSelectUser}\n                suffixIcon={<UserOutlined className=\"selectIcon\" />}\n              >\n                {props.usersByTeam !== undefined && props.usersByTeam.length > 0\n                  ? props.usersByTeam[selectedTeamId].map(user => (\n                      <Option value={user.id} id={user.id} key={user.id}>\n                        {user.nickName ? user.nickName : user.userName}\n                      </Option>\n                    ))\n                  : null}\n                <Option value={0} id={0} key={0}>\n                  All Users\n                </Option>\n              </Select>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Kanban2\">\n      {dataLoaded && topData()}\n      <div className=\"card-container\">\n        <Card bordered={false}>\n          {dataLoaded ? (\n            toggle ? (\n              <PipeView\n                currentMenu={props.currentMenu}\n                deals={props.deals}\n                activityTypes={props.activityTypes}\n                companyTypes={props.companyTypes}\n                contactTypes={props.contactTypes}\n                dealStatuses={props.dealStatuses}\n                reasons={props.reasons}\n                roles={props.roles}\n                teams={props.teams}\n                users={props.users}\n                targetTypes={props.targetTypes}\n                activities={props.activities}\n                allDeals={allDeals}\n                selectedTeamId={selectedTeamId}\n                selectedPipeId={selectedPipeId}\n                filteredStages={filteredStages}\n                currentPipeDeals={currentPipeDeals}\n                total={total}\n                selectedUserId={selectedUserId}\n                currentDealActs={currentDealActs}\n                currentDeal={currentDeal}\n                currentTeamTarget={currentTeamTarget}\n                currentUserTarget={currentUserTarget}\n                userQuota={userQuota}\n                userAchieved={userAchieved}\n                teamAchieved={teamAchieved}\n                teamQuota={teamQuota}\n                dealsValue={dealsValue}\n                dealsInDND={dealsInDND}\n                onDragStart={onDragStart}\n                onDragOver={onDragOver}\n                onDrop={onDrop}\n                topColors={topColors}\n              />\n            ) : (\n              <Explanation />\n            )\n          ) : null}\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default Kanban2;\n","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban2/PipeView.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Kanban2/Explanation.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/OverviewStats.js",["228","229","230","231","232","233"],"import React, { useState, useEffect } from \"react\";\n\nimport {\n  Tabs,\n  Typography,\n  Spin,\n  Card,\n  Row,\n  Col,\n  Statistic,\n  Descriptions,\n  Divider,\n  Progress\n} from \"antd\";\n\nimport {\n  LoadingOutlined,\n  ArrowUpOutlined,\n  ArrowDownOutlined,\n  CheckCircleTwoTone,\n  BulbTwoTone,\n  HomeTwoTone,\n  DollarOutlined,\n  SmileTwoTone,\n  PhoneTwoTone,\n  MailTwoTone,\n  ThunderboltTwoTone,\n  DollarTwoTone,\n  FireTwoTone\n} from \"@ant-design/icons\";\n\n//import axios from \"axios\";\n\nimport \"./OverviewStats.css\";\n\nconst { TabPane } = Tabs;\nconst { Title } = Typography;\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\nconst OverviewStats = props => {\n  const [something, setSomething] = useState(props.something);\n  const [dataLoaded, setLoaded] = useState(true);\n\n  const callback = key => {\n    console.log(key);\n  };\n\n  useEffect(() => {\n    setSomething(something);\n  }, [something]);\n\n  const stats = type => {\n    if (type === \"today\") {\n      return (\n        <div className=\"OverviewStats\">\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n            <Col span={16}>\n              <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n                <Col span={12}>\n                  <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n                    <Col span={24}>\n                      <Card className=\"majorStatCard\">20 Activities</Card>\n                    </Col>\n                    <Divider>across</Divider>\n                    <Col span={24}>\n                      <Card className=\"majorStatCard\">8 Deals</Card>\n                    </Col>\n                  </Row>\n                </Col>\n                <Col span={12}>\n                  <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n                    <Col span={12}>\n                      <Card className=\"minorStatCard\">5 Demos</Card>\n                    </Col>\n                    <Col span={12}>\n                      <Card className=\"minorStatCard\">1 Meeting(s)</Card>\n                    </Col>\n                    <Col span={12}>\n                      <Card className=\"minorStatCard\">8 Calls</Card>\n                    </Col>\n                    <Col span={12}>\n                      <Card className=\"minorStatCard\">4 Emails</Card>\n                    </Col>\n                    <Col span={24}>\n                      <Card className=\"minorStatCard\">2 Others</Card>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </Col>\n            <Col span={8}>\n              <Card title=\"Achieved\" className=\"statsCard\">\n                <Progress\n                  strokeColor={{\n                    from: \"#108ee9\",\n                    to: \"#87d068\"\n                  }}\n                  status=\"active\"\n                  percent={62}\n                />\n                <br />\n                <br />\n                <span className=\"statsCardSpan\">Quota $1000</span>\n                <br />\n                <br />\n                <span className=\"statsCardSpan\">8 Deals Won</span>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n            <Col span={24}>\n              <Card className=\"firstActCard\">\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n                  <Col span={24}>\n                    <span className=\"FACtitleSpan\">\n                      Call XYZ from ABS @ 09:30 for 10 minutes regarding Final\n                      Closure\n                    </span>\n                    <span className=\"FACInfoSpan\">1 of 20</span>\n                  </Col>\n                </Row>\n                <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n                  <Col span={8}>\n                    <Card title=\"ABS Deal\" className=\"FACSpecifics\">\n                      <DollarTwoTone twoToneColor=\"#52c41a\" />\n                      <span className=\"emptySpan\" /> 1,000\n                      <br />\n                      <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                      <span className=\"emptySpan\" /> 3 Demos\n                      <br />\n                      <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                      <span className=\"emptySpan\" /> 7 Calls\n                      <br />\n                      <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                      <span className=\"emptySpan\" /> 15 Emails\n                      <br />\n                    </Card>\n                  </Col>\n                  <Col span={8}>\n                    <Card title=\"ABS Corporation\" className=\"FACSpecifics\">\n                      <HomeTwoTone />\n                      <span className=\"emptySpan\" /> California\n                      <br />\n                      <BulbTwoTone />\n                      <span className=\"emptySpan\" /> Software Development\n                      <br />\n                      <DollarTwoTone />\n                      <span className=\"emptySpan\" /> 10M Annual Revenue\n                      <br />\n                      <SmileTwoTone />\n                      <span className=\"emptySpan\" /> 500 Employees\n                      <br />\n                    </Card>\n                  </Col>\n                  <Col span={8}>\n                    <Card title=\"XYZ\" className=\"FACSpecifics\">\n                      <FireTwoTone twoToneColor=\"#FC902B\" />\n                      <span className=\"emptySpan\" /> Influencer\n                      <br />\n                      <PhoneTwoTone twoToneColor=\"#FC902B\" />\n                      <span className=\"emptySpan\" /> +1 345 232 2345\n                      <br />\n                      <MailTwoTone twoToneColor=\"#FC902B\" />\n                      <span className=\"emptySpan\" />{\" \"}\n                      <a\n                        href={`mailto:xyz@abs.com`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        xyz@abs.com\n                      </a>\n                      <br />\n                      <ThunderboltTwoTone twoToneColor=\"#FC902B\" />\n                      <span className=\"emptySpan\" /> 12 Interactions\n                      <br />\n                    </Card>\n                  </Col>\n                </Row>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div\n      className=\"site-layout-background\"\n      style={{ padding: 24, textAlign: \"center\" }}\n    >\n      <Title level={4}>Hey, Anwin. This is how your day looks like.</Title>\n      <Spin tip=\"Loading...\" indicator={antIcon} spinning={!dataLoaded}>\n        <Tabs className=\"mainAppTabs\" onChange={callback} type=\"card\">\n          <TabPane tab=\"Today\" key=\"1\">\n            {stats(\"today\")}\n          </TabPane>\n          <TabPane tab=\"Tomorrow\" key=\"2\">\n            Content of Tab Pane 2\n          </TabPane>\n          <TabPane tab=\"This Week\" key=\"3\">\n            Content of Tab Pane 3\n          </TabPane>\n        </Tabs>\n      </Spin>\n    </div>\n  );\n};\n\nexport default OverviewStats;\n",["234","235"],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/InboxComps/OtherActs.js",[],["236","237"],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/Inbox.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/AllActivities.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Tasks.js",[],["238","239"],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/InboxComps/InboxHeader.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Tasks/Components/Explanation.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Contact/Contact.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Overview.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Badges/Badges.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Parser/Components/Leads.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Parser/Components/Sidebar.js",[],["240","241"],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Parser/Components/Campaigns.js",[],"/Users/aj/Projects/personal/portfolio/src/config/index.js",[],["242","243"],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Parser/Parser.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Parser/Components/Explanation.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Templates/Templates.js",["244","245","246"],"import React, { useState, useEffect } from \"react\";\n\nimport {\n  Card,\n  Row,\n  Col,\n  Layout,\n  Space,\n  Spin,\n  Table,\n  Dropdown,\n  Menu,\n  Button,\n  message\n} from \"antd\";\n\nimport { EditorState, convertToRaw, convertFromRaw } from \"draft-js\";\n\nimport axios from \"axios\";\n\nimport CreateTemplate from \"./Components/Create\";\nimport TemplateView from \"./Components/View\";\nimport EditTemplate from \"./Components/Edit\";\nimport Explanation from \"./Components/Explanation\";\n\nimport \"./Template.css\";\nimport \"../../../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nconst template = require(\"../../../../libs/playbook.json\");\nconst toolbarOptions = require(\"../../../../libs/toolbarOptions.json\").data;\nconst { isEmpty } = require(\"../../../../libs/validators\");\nconst tenantData = require(\"../../../../libs/tenantData.json\");\nconst token = require(\"../../../../libs/token.json\");\n\nconst { Content } = Layout;\n\nconst Template = props => {\n  const [loading, setLoading] = useState(true);\n  const [rightMenu, setRightMenu] = useState({\n    show: false,\n    data: \"stats\"\n  });\n  const [minorTab, setMinor] = useState(\"templates\");\n  const [selectedRecords, setSelected] = useState({\n    loading: false,\n    hasSelected: false,\n    selectedRowKeys: []\n  });\n  const [selectedPlaybook, setSelectedPlaybook] = useState({\n    view: false,\n    edit: false,\n    type: \"none\",\n    record: {},\n    options: [\"play\", \"script\", \"template\", \"collateral\", \"none\"],\n    viewICP: false,\n    editICP: false,\n    delete: false\n  });\n  const [playbookData, setPlaybookData] = useState(null);\n  const [newPlaybook, setNewPlaybook] = useState({\n    flag: false,\n    type: \"none\",\n    record: {},\n    options: [\"play\", \"script\", \"template\", \"collateral\", \"none\"],\n    isICP: false\n  });\n  const [localEditorState, setEditorState] = useState(\n    EditorState.createEmpty()\n  );\n\n  useEffect(() => {\n    async function onLoad() {\n      try {\n        let data = {\n          allPlaybooks: props.leadsData.playbooks,\n          allPlays: props.leadsData.playbooks.filter(\n            pb => pb.details.type === \"play\"\n          ),\n          allScripts: props.leadsData.playbooks.filter(\n            pb => pb.details.type === \"script\"\n          ),\n          allTemplates: props.leadsData.playbooks.filter(\n            pb => pb.details.type === \"template\"\n          ),\n          allCollaterals: props.leadsData.playbooks.filter(\n            pb => pb.details.type === \"collateral\"\n          ),\n          allICP: props.leadsData.playbooks.filter(\n            pb => pb.details.type === \"icp\"\n          )\n        };\n\n        setPlaybookData(data);\n        setLoading(false);\n      } catch (error) {\n        //console.log(\"error\", error);\n      }\n    }\n    //console.log(\"props.leadsData\", props.leadsData);\n    if (props.leadsData.playbooks) onLoad();\n  }, [props.leadsData]);\n\n  const onEditorStateChange = editorState => {\n    setEditorState(editorState);\n  };\n  /*\n  const saveEditorContent = data => {\n    localStorage.setItem(\"editorData\", JSON.stringify(data));\n  };\n\n  const getSavedEditorData = () => {\n    const savedData = localStorage.getItem(\"editorData\");\n\n    return savedData ? JSON.parse(savedData) : null;\n  };\n\n  const renderContentAsRawJs = () => {\n    const contentState = localEditorState.getCurrentContent();\n    const raw = convertToRaw(contentState);\n\n    return JSON.stringify(raw, null, 2);\n  };\n*/\n  const recalculatePlaybooks = playbooks => {\n    setLoading(true);\n\n    if (playbooks && playbooks.length > 0) {\n      let data = {\n        allPlaybooks: playbooks,\n        allPlays: playbooks.filter(pb => pb.details.type === \"play\"),\n        allScripts: playbooks.filter(pb => pb.details.type === \"script\"),\n        allTemplates: playbooks.filter(pb => pb.details.type === \"template\"),\n        allCollaterals: playbooks.filter(\n          pb => pb.details.type === \"collateral\"\n        ),\n        allICP: playbooks.filter(pb => pb.details.type === \"icp\")\n      };\n\n      setPlaybookData(data);\n    }\n    setLoading(false);\n  };\n\n  const onTabChange = key => {\n    //console.log(\"key\", key);\n    setMinor(key);\n  };\n\n  const onSelectChange = selectedRowKeys => {\n    //console.log(\"selectedRowKeys changed: \", selectedRowKeys);\n    setSelected({\n      ...selectedRecords,\n      selectedRowKeys: selectedRowKeys,\n      hasSelected: selectedRowKeys.length > 0\n    });\n  };\n\n  const rowSelection = {\n    selectedRowKeys: selectedRecords.selectedRowKeys,\n    onChange: onSelectChange\n  };\n\n  const showTotal = total => {\n    return `Total ${total} items`;\n  };\n\n  const submitDeletePlaybook = async e => {\n    e.preventDefault();\n\n    //console.log(\"selectedPlaybook.record\", selectedPlaybook.record);\n    /*\n    try {\n\n      const result = await axios({\n        method: \"DELETE\",\n        url: `/${\"dev\"}/v3/playbooks/byid/${selectedPlaybook.record.id}`,\n        headers: { Authorization: `${token.authToken}` }\n      });\n\n      console.log(\"result.data\", result.data);\n\n      if (\n        result.data &&\n        result.data !== \"Tenant ID does not match resource requested\"\n      ) {\n        let playbooks = props.leadsData.playbooks.filter(p => p.id !== result.data.id);\n\n        recalculatePlaybooks(playbooks);\n        props.setLeads({\n          ...props.leadsData,\n          playbooks: playbooks\n        });\n        message.success(\"Successfully deleted Script\");\n\n        setSelectedPlaybook({\n          ...selectedPlaybook,\n          edit: false\n        });\n      }\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n    */\n  };\n\n  const submitEditPlaybook = async e => {\n    e.preventDefault();\n\n    //console.log(\"selectedPlaybook.record\", selectedPlaybook.record);\n\n    let playbook = selectedPlaybook.record;\n    playbook.owner.lastUpdatedBy = token.id;\n\n    let dataToUpdate = {\n      playbook: playbook,\n      dataChanged: \"scriptData\"\n    };\n\n    //console.log(\"dataToUpdate\", dataToUpdate);\n\n    try {\n      /*\n      const result = await axios({\n        method: \"PUT\",\n        url: `/${\"dev\"}/v3/playbooks/byid/${dataToUpdate.playbook.id}`,\n        headers: { Authorization: `${token.authToken}` },\n        data: dataToUpdate\n      });\n      console.log(\"result.data\", result.data);\n*/\n      if (dataToUpdate) {\n        let playbooks = props.leadsData.playbooks.map(p => {\n          if (p.id !== playbook.id) {\n            return p;\n          } else {\n            return playbook;\n          }\n        });\n\n        recalculatePlaybooks(playbooks);\n        props.setLeads({\n          ...props.leadsData,\n          playbooks: playbooks\n        });\n        message.success(\"Successfully edited Script\");\n\n        setSelectedPlaybook({\n          ...selectedPlaybook,\n          edit: false\n        });\n      }\n    } catch (error) {\n      //console.log(\"error\", error);\n    }\n  };\n\n  const submitNewPlaybook = async e => {\n    e.preventDefault();\n    //console.log(\"newPlaybook.record\", newPlaybook.record);\n\n    try {\n      /*\n      const result = await axios({\n        method: \"POST\",\n        url: `/${\"dev\"}/v3/playbooks/create`,\n        headers: { Authorization: `${token.authToken}` },\n        data: newPlaybook.record\n      });\n      console.log(\"result.data\", result.data);\n*/\n      if (newPlaybook.record) {\n        let playbooks = props.leadsData.playbooks;\n        playbooks.push(newPlaybook.record);\n\n        recalculatePlaybooks(playbooks);\n        props.setLeads({\n          ...props.leadsData,\n          playbooks: playbooks\n        });\n        message.success(\"Successfully created Script\");\n\n        setNewPlaybook({\n          ...newPlaybook,\n          flag: false,\n          type: \"none\",\n          record: {}\n        });\n      }\n    } catch (error) {\n      //console.log(\"error\", error);\n    }\n  };\n\n  const submitNewPlaybookE = async e => {\n    e.preventDefault();\n    //console.log(\"newPlaybook.record\", newPlaybook.record);\n\n    let data = newPlaybook.record;\n    let contentState = localEditorState.getCurrentContent();\n    //console.log(\"contentState\", contentState);\n    let raw = convertToRaw(contentState);\n    //console.log(\"raw\", raw);\n    let eBody = JSON.stringify(raw, null, 2);\n    //console.log(\"eBody\", eBody);\n    data.eTemplateData.eBody = eBody;\n\n    //console.log(\"data\", data);\n\n    try {\n      /*\n      const result = await axios({\n        method: \"POST\",\n        url: `/${\"dev\"}/v3/playbooks/create`,\n        headers: { Authorization: `${token.authToken}` },\n        data: newPlaybook.record\n      });\n      console.log(\"result.data\", result.data);\n*/\n      if (data) {\n        let playbooks = props.leadsData.playbooks;\n        playbooks.push(data);\n\n        recalculatePlaybooks(playbooks);\n        props.setLeads({\n          ...props.leadsData,\n          playbooks: playbooks\n        });\n        message.success(\"Successfully created Email Template\");\n\n        setNewPlaybook({\n          ...newPlaybook,\n          flag: false,\n          type: \"none\",\n          record: {}\n        });\n      }\n    } catch (error) {\n      //console.log(\"error\", error);\n    }\n  };\n\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"details\",\n      width: \"10%\",\n      render: details => (details && details.name ? details.name : \"---\")\n    },\n    {\n      title: \"Type\",\n      dataIndex: \"details\",\n      render: details =>\n        details && details.type ? details.type.toUpperCase() : \"---\"\n    },\n    {\n      title: \"Description\",\n      dataIndex: \"details\",\n      width: \"15%\",\n      render: details =>\n        details && details.description ? details.description : \"---\"\n    },\n    {\n      title: \"Category\",\n      dataIndex: \"details\",\n      render: (details, record) =>\n        details.type\n          ? details.type === \"script\"\n            ? record.scriptData.categoryId &&\n              props.commonData.masterCategories.find(\n                c => c.id === record.scriptData.categoryId\n              )\n              ? props.commonData.masterCategories.filter(\n                  c => c.id === record.scriptData.categoryId\n                )[0].categoryName\n              : \"---\"\n            : details.type === \"play\"\n            ? record.playData.categoryId &&\n              props.commonData.masterCategories.find(\n                c => c.id === record.playData.categoryId\n              )\n              ? props.commonData.masterCategories.filter(\n                  c => c.id === record.playData.categoryId\n                )[0].categoryName\n              : \"---\"\n            : details.type === \"collateral\"\n            ? record.collateralData.categoryId &&\n              props.commonData.masterCategories.find(\n                c => c.id === record.collateralData.categoryId\n              )\n              ? props.commonData.masterCategories.filter(\n                  c => c.id === record.collateralData.categoryId\n                )[0].categoryName\n              : \"---\"\n            : details.type === \"template\"\n            ? record.eTemplateData.categoryId &&\n              props.commonData.masterCategories.find(\n                c => c.id === record.eTemplateData.categoryId\n              )\n              ? props.commonData.masterCategories.filter(\n                  c => c.id === record.eTemplateData.categoryId\n                )[0].categoryName\n              : \"---\"\n            : \"---\"\n          : \"---\"\n    },\n    {\n      title: \"Up Votes\",\n      dataIndex: \"details\",\n      render: (details, record) =>\n        details.type\n          ? details.type === \"script\"\n            ? record.scriptData.upVotes\n              ? record.scriptData.upVotes\n              : 0\n            : details.type === \"play\"\n            ? record.playData.upVotes\n              ? record.playData.upVotes\n              : 0\n            : details.type === \"collateral\"\n            ? record.collateralData.upVotes\n              ? record.collateralData.upVotes\n              : 0\n            : details.type === \"template\"\n            ? record.eTemplateData.upVotes\n              ? record.eTemplateData.upVotes\n              : 0\n            : \"---\"\n          : \"---\"\n    },\n    {\n      title: \"Down Votes\",\n      dataIndex: \"details\",\n      render: (details, record) =>\n        details.type\n          ? details.type === \"script\"\n            ? record.scriptData.downVotes\n              ? record.scriptData.downVotes\n              : 0\n            : details.type === \"play\"\n            ? record.playData.downVotes\n              ? record.playData.downVotes\n              : 0\n            : details.type === \"collateral\"\n            ? record.collateralData.downVotes\n              ? record.collateralData.downVotes\n              : 0\n            : details.type === \"template\"\n            ? record.eTemplateData.downVotes\n              ? record.eTemplateData.downVotes\n              : 0\n            : \"---\"\n          : \"---\"\n    },\n    {\n      title: \"Actions\",\n      key: \"action\",\n      render: (text, record) => (\n        <Space>\n          <Button\n            size=\"small\"\n            type=\"default\"\n            onClick={() => {\n              if (record.details.type === \"template\") {\n                setEditorState(\n                  EditorState.createWithContent(\n                    convertFromRaw(JSON.parse(record.eTemplateData.eBody))\n                  )\n                );\n              }\n              setSelectedPlaybook({\n                ...selectedPlaybook,\n                view: true,\n                record: record,\n                type: record.details.type\n              });\n\n              setMinor(\"selected\");\n            }}\n          >\n            View\n          </Button>\n          <Button\n            size=\"small\"\n            type=\"default\"\n            onClick={() => {\n              if (record.details.type === \"template\") {\n                setEditorState(\n                  EditorState.createWithContent(\n                    convertFromRaw(JSON.parse(record.eTemplateData.eBody))\n                  )\n                );\n              }\n              setSelectedPlaybook({\n                ...selectedPlaybook,\n                edit: true,\n                record: record,\n                type: record.details.type\n              });\n            }}\n          >\n            Edit\n          </Button>\n        </Space>\n      )\n    }\n  ];\n\n  const contentList = {\n    about: <Explanation />,\n    templates: (\n      <Table\n        dataSource={\n          !loading &&\n          playbookData &&\n          playbookData.allTemplates &&\n          playbookData.allTemplates.length > 0\n            ? playbookData.allTemplates\n            : []\n        }\n        rowSelection={rowSelection}\n        columns={columns}\n        size=\"small\"\n        pagination={{\n          size: \"small\",\n          total:\n            !loading &&\n            playbookData &&\n            playbookData.allTemplates &&\n            playbookData.allTemplates.length > 0\n              ? playbookData.allTemplates.length\n              : 0,\n          showSizeChanger: true,\n          pageSizeOptions: [10, 25, 50, 100],\n          showTotal: showTotal\n        }}\n        rowKey=\"id\"\n        bordered={false}\n        locale={{ emptyText: \"No Playbooks created...yet!\" }}\n        scroll={{ scrollToFirstRowOnChange: true, x: 100, y: \"67vh\" }}\n      />\n    ),\n    selected:\n      !loading && (selectedPlaybook.view || selectedPlaybook.edit) ? (\n        selectedPlaybook.type === \"template\" ? (\n          <TemplateView\n            record={selectedPlaybook.record}\n            categories={props.commonData.masterCategories}\n            users={tenantData.users}\n            setSelectedPlaybook={setSelectedPlaybook}\n            selectedPlaybook={selectedPlaybook}\n            submitDeletePlaybook={submitDeletePlaybook}\n            toolbar={toolbarOptions}\n            editorState={localEditorState}\n            onEditorStateChange={onEditorStateChange}\n            convertToRaw={convertToRaw}\n            isEmpty={isEmpty}\n            setEditorState={setEditorState}\n            convertFromRaw={convertFromRaw}\n            EditorState={EditorState}\n            rightMenu={rightMenu}\n          />\n        ) : null\n      ) : null\n  };\n\n  const tabList = [\n    {\n      key: \"about\",\n      tab: <span>About</span>\n    },\n    {\n      key: \"templates\",\n      tab: (\n        <span>\n          Templates{\" \"}\n          <small className=\"superscript\">\n            <sup>\n              (\n              {!loading &&\n              playbookData &&\n              playbookData.allTemplates &&\n              playbookData.allTemplates.length > 0\n                ? playbookData.allTemplates.length\n                : 0}\n              )\n            </sup>\n          </small>\n        </span>\n      )\n    },\n    {\n      key: \"selected\",\n      tab:\n        !loading &&\n        selectedPlaybook.view &&\n        selectedPlaybook.record &&\n        selectedPlaybook.record.details ? (\n          <span>{selectedPlaybook.record.details.name}</span>\n        ) : null\n    }\n  ];\n\n  return (\n    <Layout className=\"PlaybookLayout\">\n      <Content className=\"Templates\">\n        {!loading ? (\n          <Row>\n            <Col span={24}>\n              <Card\n                bordered={false}\n                style={{ width: \"100%\" }}\n                tabList={tabList}\n                activeTabKey={minorTab}\n                onTabChange={key => {\n                  onTabChange(key);\n                }}\n                className=\"PlaybookCard\"\n                tabBarExtraContent={\n                  <Dropdown\n                    overlay={\n                      <Menu>\n                        <Menu.Item\n                          key=\"template\"\n                          onClick={() => {\n                            setNewPlaybook({\n                              ...newPlaybook,\n                              flag: true,\n                              type: \"template\",\n                              record: {\n                                ...template.playbookTemplate,\n                                tenantId: token.tId,\n                                userId: token.id,\n                                owner: {\n                                  ...template.playbookTemplate.owner,\n                                  createdBy: token.id,\n                                  lastUpdatedBy: token.id\n                                },\n                                details: {\n                                  ...template.playbookTemplate.details,\n                                  type: \"template\"\n                                }\n                              }\n                            });\n                          }}\n                        >\n                          New Email Template\n                        </Menu.Item>\n                      </Menu>\n                    }\n                    placement=\"bottomRight\"\n                  >\n                    <span\n                      className=\"far fa-plus-square\"\n                      style={{ opacity: \"0.6\" }}\n                    />\n                  </Dropdown>\n                }\n              >\n                <Row>\n                  <Col span={24}>\n                    {!loading && contentList[minorTab]}\n\n                    {newPlaybook.flag ? (\n                      newPlaybook.type === \"template\" ? (\n                        <CreateTemplate\n                          setNewPlaybook={setNewPlaybook}\n                          newPlaybook={newPlaybook}\n                          commonData={props.commonData}\n                          template={template}\n                          submitNewPlaybook={submitNewPlaybookE}\n                          toolbar={toolbarOptions}\n                          editorState={localEditorState}\n                          onEditorStateChange={onEditorStateChange}\n                          convertToRaw={convertToRaw}\n                          isEmpty={isEmpty}\n                        />\n                      ) : null\n                    ) : null}\n\n                    {selectedPlaybook.edit ? (\n                      selectedPlaybook.type === \"template\" ? (\n                        <EditTemplate\n                          selectedPlaybook={selectedPlaybook}\n                          setSelectedPlaybook={setSelectedPlaybook}\n                          commonData={props.commonData}\n                          template={template}\n                          tenantId={token.tId}\n                          userId={token.id}\n                          authToken={token.authToken}\n                          stage={\"dev\"}\n                          submitEditPlaybook={submitEditPlaybook}\n                          categories={props.commonData.masterCategories}\n                          users={tenantData.users}\n                          toolbar={toolbarOptions}\n                          editorState={localEditorState}\n                          onEditorStateChange={onEditorStateChange}\n                          convertToRaw={convertToRaw}\n                          isEmpty={isEmpty}\n                          setEditorState={setEditorState}\n                          convertFromRaw={convertFromRaw}\n                          EditorState={EditorState}\n                        />\n                      ) : null\n                    ) : null}\n                  </Col>\n                </Row>\n              </Card>\n            </Col>\n          </Row>\n        ) : (\n          <Space size=\"large\" style={{ height: \"60vh\" }}>\n            <Spin tip=\"Getting stuff organized...\" size=\"large\" />\n          </Space>\n        )}\n      </Content>\n    </Layout>\n  );\n};\n\nexport default Template;\n","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Templates/Components/Create.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Templates/Components/Edit.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Templates/Components/View.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Templates/Components/Explanation.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Components/ShowOrgs.js",["247"],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Timeline1.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Components/ShowContacts.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Components/ShowOneContact.js",["248"],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Components/SmartBcc.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Components/Overview.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Components/ShowDetails.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Components/TimelineItem.js",[],"/Users/aj/Projects/personal/portfolio/src/Components/LoaderButton.js",["249"],"import React from \"react\";\nimport { Button, Spinner } from \"react-bootstrap\";\n//import { Glyphicon } from \"react-bootstrap/Glyphicon\";\nimport \"./LoaderButton.css\";\n\nexport default ({\n  isLoading,\n  text,\n  loadingText,\n  className = \"\",\n  disabled = false,\n  ...props\n}) => (\n  <Button\n    variant=\"secondary\"\n    size=\"lg\"\n    className={`LoaderButton ${className}`}\n    disabled={disabled || isLoading}\n    {...props}\n  >\n    {isLoading && (\n      <Spinner\n        as=\"span\"\n        animation=\"grow\"\n        size=\"lg\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n    )}\n    {!isLoading ? text : loadingText}\n  </Button>\n);\n","/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Components/Timeline.js",[],"/Users/aj/Projects/personal/portfolio/src/Containers/Showcase/Components/Timeline1/Components/Explanation.js",[],{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"250","replacedBy":"254"},{"ruleId":"252","replacedBy":"255"},{"ruleId":"250","replacedBy":"256"},{"ruleId":"252","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":141,"column":6,"nodeType":"260","endLine":141,"endColumn":38,"suggestions":"261"},{"ruleId":"262","severity":1,"message":"263","line":320,"column":11,"nodeType":"264","messageId":"265","endLine":320,"endColumn":23},{"ruleId":"250","replacedBy":"266"},{"ruleId":"252","replacedBy":"267"},{"ruleId":"250","replacedBy":"268"},{"ruleId":"252","replacedBy":"269"},{"ruleId":"250","replacedBy":"270"},{"ruleId":"252","replacedBy":"271"},{"ruleId":"258","severity":1,"message":"259","line":129,"column":6,"nodeType":"260","endLine":138,"endColumn":4,"suggestions":"272"},{"ruleId":"262","severity":1,"message":"273","line":10,"column":3,"nodeType":"264","messageId":"265","endLine":10,"endColumn":12},{"ruleId":"262","severity":1,"message":"274","line":11,"column":3,"nodeType":"264","messageId":"265","endLine":11,"endColumn":15},{"ruleId":"262","severity":1,"message":"275","line":18,"column":3,"nodeType":"264","messageId":"265","endLine":18,"endColumn":18},{"ruleId":"262","severity":1,"message":"276","line":19,"column":3,"nodeType":"264","messageId":"265","endLine":19,"endColumn":20},{"ruleId":"262","severity":1,"message":"277","line":23,"column":3,"nodeType":"264","messageId":"265","endLine":23,"endColumn":17},{"ruleId":"262","severity":1,"message":"278","line":42,"column":22,"nodeType":"264","messageId":"265","endLine":42,"endColumn":31},{"ruleId":"250","replacedBy":"279"},{"ruleId":"252","replacedBy":"280"},{"ruleId":"250","replacedBy":"281"},{"ruleId":"252","replacedBy":"282"},{"ruleId":"250","replacedBy":"283"},{"ruleId":"252","replacedBy":"284"},{"ruleId":"250","replacedBy":"285"},{"ruleId":"252","replacedBy":"286"},{"ruleId":"250","replacedBy":"287"},{"ruleId":"252","replacedBy":"288"},{"ruleId":"262","severity":1,"message":"289","line":19,"column":8,"nodeType":"264","messageId":"265","endLine":19,"endColumn":13},{"ruleId":"262","severity":1,"message":"290","line":39,"column":21,"nodeType":"264","messageId":"265","endLine":39,"endColumn":33},{"ruleId":"262","severity":1,"message":"291","line":257,"column":9,"nodeType":"264","messageId":"265","endLine":257,"endColumn":26},{"ruleId":"262","severity":1,"message":"292","line":20,"column":8,"nodeType":"264","messageId":"265","endLine":20,"endColumn":20},{"ruleId":"262","severity":1,"message":"292","line":20,"column":8,"nodeType":"264","messageId":"265","endLine":20,"endColumn":20},{"ruleId":"293","severity":1,"message":"294","line":6,"column":1,"nodeType":"295","endLine":32,"endColumn":3},"no-native-reassign",["296"],"no-negated-in-lhs",["297"],["296"],["297"],["296"],["297"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updatePipeDeals'. Either include it or remove the dependency array.","ArrayExpression",["298"],"no-unused-vars","'teamAchieved' is assigned a value but never used.","Identifier","unusedVar",["296"],["297"],["296"],["297"],["296"],["297"],["299"],"'Statistic' is defined but never used.","'Descriptions' is defined but never used.","'ArrowUpOutlined' is defined but never used.","'ArrowDownOutlined' is defined but never used.","'DollarOutlined' is defined but never used.","'setLoaded' is assigned a value but never used.",["296"],["297"],["296"],["297"],["296"],["297"],["296"],["297"],["296"],["297"],"'axios' is defined but never used.","'setRightMenu' is assigned a value but never used.","'submitNewPlaybook' is assigned a value but never used.","'LoaderButton' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},"Update the dependencies array to be: [pipeId, selectedUserId, teamId, updatePipeDeals]",{"range":"304","text":"305"},"Update the dependencies array to be: [props.deals, props.activities, props.orgs, props.pipelines, props.stages, props.selectedUserId, props.teamId, props.pipeId, updatePipeDeals]",{"range":"306","text":"307"},[4855,4887],"[pipeId, selectedUserId, teamId, updatePipeDeals]",[3456,3616],"[props.deals, props.activities, props.orgs, props.pipelines, props.stages, props.selectedUserId, props.teamId, props.pipeId, updatePipeDeals]"]